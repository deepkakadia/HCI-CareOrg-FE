{"ast":null,"code":"export const login = async (username, password) => {\n  localStorage.removeItem(\"token\");\n  let res = await fetch(\"http://localhost:8000/api/user/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      password\n    })\n  });\n  let response = await res.json();\n\n  if (response.token) {\n    localStorage.setItem(\"token\", response.token);\n  }\n\n  return res.ok;\n};\nexport const signup = async (email, name, password) => {\n  let res = await fetch(\"http://localhost:8000/api/user/\", {\n    // The route in thebackend which is supposed to get the token\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      name,\n      password\n    })\n  });\n  let response = await res.json();\n\n  if (response.email & response.name) {\n    try {\n      login(email, password);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return res.ok;\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n};\nexport const isLogin = () => {\n  if (localStorage.getItem(\"token\") === \"undefined\" || typeof localStorage.getItem(\"token\") === undefined || localStorage.getItem(\"token\") === null) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/Users/deepkakadia/Desktop/HCI-CareOrg-FE/src/utils/index.js"],"names":["login","username","password","localStorage","removeItem","res","fetch","method","headers","body","JSON","stringify","name","response","json","token","setItem","ok","signup","email","e","console","log","logout","isLogin","getItem","undefined"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjDC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,MAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAyC;AAC5DC,IAAAA,MAAM,EAAE,MADoD;AAE5DC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFmD;AAK5DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,IAAF;AAAQV,MAAAA;AAAR,KAAf;AALsD,GAAzC,CAArB;AAOA,MAAIW,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAJ,EAArB;;AACA,MAAID,QAAQ,CAACE,KAAb,EAAoB;AAClBZ,IAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BH,QAAQ,CAACE,KAAvC;AACD;;AACD,SAAOV,GAAG,CAACY,EAAX;AACD,CAdM;AAgBP,OAAO,MAAMC,MAAM,GAAG,OAAOC,KAAP,EAAcP,IAAd,EAAoBV,QAApB,KAAiC;AACrD,MAAIG,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AAAE;AACzDC,IAAAA,MAAM,EAAE,MAD+C;AAEvDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF8C;AAKvDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEQ,MAAAA,KAAF;AAASP,MAAAA,IAAT;AAAeV,MAAAA;AAAf,KAAf;AALiD,GAApC,CAArB;AAOA,MAAIW,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAJ,EAArB;;AACA,MAAID,QAAQ,CAACM,KAAT,GAAiBN,QAAQ,CAACD,IAA9B,EAAoC;AAClC,QAAG;AACDZ,MAAAA,KAAK,CAACmB,KAAD,EAAQjB,QAAR,CAAL;AACD,KAFD,CAGA,OAAMkB,CAAN,EAAQ;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AAEF;;AACD,SAAOf,GAAG,CAACY,EAAX;AACD,CAnBM;AAqBP,OAAO,MAAMM,MAAM,GAAG,MAAM;AAC1BpB,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACD,CAFM;AAIP,OAAO,MAAMoB,OAAO,GAAG,MAAM;AAC3B,MACErB,YAAY,CAACsB,OAAb,CAAqB,OAArB,MAAkC,WAAlC,IACA,OAAOtB,YAAY,CAACsB,OAAb,CAAqB,OAArB,CAAP,KAAyCC,SADzC,IAEAvB,YAAY,CAACsB,OAAb,CAAqB,OAArB,MAAkC,IAHpC,EAIE;AACA,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD,CAVM","sourcesContent":["export const login = async (username, password) => {\n  localStorage.removeItem(\"token\");\n  let res = await fetch(\"http://localhost:8000/api/user/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ name, password }),\n  });\n  let response = await res.json();\n  if (response.token) {\n    localStorage.setItem(\"token\", response.token);\n  }\n  return res.ok;\n};\n\nexport const signup = async (email, name, password) => {\n  let res = await fetch(\"http://localhost:8000/api/user/\", { // The route in thebackend which is supposed to get the token\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, name, password }),\n  });\n  let response = await res.json();\n  if (response.email & response.name) {\n    try{\n      login(email, password)\n    }\n    catch(e){\n      console.log(e)\n    }\n    \n  }\n  return res.ok;\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n};\n\nexport const isLogin = () => {\n  if (\n    localStorage.getItem(\"token\") === \"undefined\" ||\n    typeof localStorage.getItem(\"token\") === undefined ||\n    localStorage.getItem(\"token\") === null\n  ) {\n    return false;\n  }\n\n  return true;\n};\n"]},"metadata":{},"sourceType":"module"}